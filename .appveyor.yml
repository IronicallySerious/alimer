version: '{branch}-{build}'

skip_commits:
  files:
    - .travis.yml

environment:
  matrix:
  - COMPILER: VS2017
    ARCHITECTURE: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - COMPILER: VS2017
    ARCHITECTURE: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #- COMPILER: MINGW_W64_7_2
  #  ARCHITECTURE: x64
  #  APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

build:
  verbosity: detailed
  parallel: true

shallow_clone: false

clone_folder:
  C:\projects\alimer

init:
  - set VORTICE_PACKAGE_SUFFIX=-Win%ARCHITECTURE%-%COMPILER%

install:
  # All external dependencies are installed in C:\projects\deps
  - mkdir C:\projects\deps
  - cd C:\projects\deps

  # Install Ninja
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip"
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\projects\deps\ninja > nul
  - set PATH=C:\projects\deps\ninja;%PATH%
  - ninja --version

  # CMake
  - cmake --version

before_build:
  - cmd: cd C:\projects\alimer
  - IF "%ARCHITECTURE%" == "x86" IF "%COMPILER%" == "VS2017"
    call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - IF "%ARCHITECTURE%" == "x64" IF "%COMPILER%" == "VS2017"
    call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"

build_script:
  - mkdir build
  - cd build
  - cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release ..
  - cmake --build . --target install

after_build:
  - cmake --build . --target package

artifacts:
  - path: 'build\*.zip'
  - path: 'build\*.gz'

